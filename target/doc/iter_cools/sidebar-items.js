initSidebarItems({"enum":[["RWError",""]],"macro":[["iter_it","Creates an iterator from the arguments."]],"struct":[["ChunksIterator","An iterator that splits sequence into chunks. Chunck size is specified by the iterator `n`. This struct is created by the [`chunks_iter()`] method on [`ChunksIteratorTrait`]. [`chunks_iter()`]: trait.ChunksIteratorTrait.html#method.chunks_iter [`ChunksIteratorTrait`]: trait.ChunksIteratorTrait.html"],["FilterOkIterator","An iterator that filters the elements of iter with predicate. This struct is created by the [`filter_ok()`]  method on [`FilterOkTrait`]. [`filter_ok()`]: trait.FilterOkTrait.html#method.filter_ok [`FilterOkTrait`]: trait.FilterOkTrait.html"],["FuseErrIterator","An iterator that yields `None` forever after the underlying iterator yields `Some(Err(_))` once. This struct is created by the [`fuse_err()`] on [`FuseErrTrait`]. [`fuse_err()`]: trait.FuseErrTrait.html#method.fuse_err [`FuseErrTrait`]:trait.FuseErrTrait.html"],["MapOkIterator","An iterator that maps the values of `iter` with `f`. This struct is created by the [`map_ok()`] method on [`MapOkTrait`]. [`map_ok()`]: trait.MapOkTrait.html#method.map_ok [`MapOkTrait`]: trait.MapOkTrait.html"],["PunctuateIterator","An iterator that combines two iterative sequences. This struct is created by the [`punctuate()`] method on [`PunctuateTrait`]. [`punctuate()`]: trait.PunctuateTrait.html#method.join [`PunctuateTrait`]: trait.PunctuateTrait.html"]],"trait":[["ChunksIteratorTrait",""],["FilterOkTrait",""],["FuseErrTrait",""],["MapOkTrait",""],["PunctuateTrait",""],["WriteIterBytes",""],["WriteIterResults",""]]});